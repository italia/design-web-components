{"version":3,"file":"track-focus.js","sourceRoot":"","sources":["track-focus.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,MAAM,gBAAgB,GAAG,kBAAkB,CAAA;AAE3C,MAAM,UAAU;IAId,YAAY,OAAoB;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,IAAI,CAAC,WAAW,EAAE,CAAA;IACpB,CAAC;IAED,UAAU;IACV,WAAW;QACT,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE,CAAC;YACzC,OAAM;QACR,CAAC;QACD,MAAM,MAAM,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;QACvC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC9C,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,KAAK,WAAW,CAAA;YAC7C,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;oBACD,GAAG,CAAC,MAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAA;gBAClE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE;YACjD,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;gBACD,GAAG,CAAC,MAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAA;YACnE,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;CACF;AAED,eAAe,UAAU,CAAA","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap Italia (https://italia.github.io/bootstrap-italia/)\n * Authors: https://github.com/italia/bootstrap-italia/blob/main/AUTHORS\n * Licensed under BSD-3-Clause license (https://github.com/italia/bootstrap-italia/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst DATA_MOUSE_FOCUS = 'data-focus-mouse'\n\nclass TrackFocus {\n  private _usingMouse: boolean\n  private _element: HTMLElement;\n\n  constructor(element: HTMLElement) {\n    this._usingMouse = false\n    this._element = element\n    this._bindEvents()\n  }\n\n  // Private\n  _bindEvents() {\n    if (typeof this._element === 'undefined') {\n      return\n    }\n    const events = ['keydown', 'mousedown']\n    events.forEach((evtName) => {\n      this._element.addEventListener(evtName, (evt) => {\n        this._usingMouse = evt.type === 'mousedown'\n      })\n    })\n    this._element.addEventListener('focusin', (evt) => {\n      if (this._usingMouse) {\n        if (evt.target) {\n          (<HTMLElement>evt.target).setAttribute(DATA_MOUSE_FOCUS, \"true\")\n        }\n      }\n    })\n    this._element.addEventListener('focusout', (evt) => {\n      if (evt.target) {\n        (<HTMLElement>evt.target).setAttribute(DATA_MOUSE_FOCUS, \"false\")\n      }\n    })\n  }\n}\n\nexport default TrackFocus"]}