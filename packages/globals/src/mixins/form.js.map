{"version":3,"file":"form.js","sourceRoot":"","sources":["form.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH;;;GAGG;AACH,MAAM,SAAS,GAAG,CAAyC,IAAW,EAAE,EAAE;IACtE;;OAEG;IACH,MAAe,aAAc,SAAQ,IAAI;QASvC,iBAAiB;YACf,aAAa;YACb,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACtF,CAAC;QACH,CAAC;QAED,oBAAoB;YAClB,yBAAyB;YACzB,iDAAiD;YACjD,IAAI;YACJ,aAAa;YACb,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC/B,CAAC;KACF;IACD,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param Base The base class.\n * @returns A mix-in to handle `formdata` event on the containing form.\n */\nconst FormMixin = <TBase extends Constructor<HTMLElement>>(Base: TBase) => {\n    /**\n     * A mix-in class to handle `formdata` event on the containing form.\n     */\n    abstract class FormMixinImpl extends Base {\n  \n      /**\n       * Handles `formdata` event.\n       *\n       * @param event The event.\n       */\n      abstract _handleFormdata(event: Event): void;\n\n      connectedCallback() {\n        // @ts-ignore\n        super.connectedCallback();\n        if (this.closest('form')) {\n          this.closest('form')?.addEventListener('formdata', this._handleFormdata.bind(this));\n        }\n      }\n  \n      disconnectedCallback() {\n        // if (this._hFormdata) {\n        //   this._hFormdata = this._hFormdata.release();\n        // }\n        // @ts-ignore\n        super.disconnectedCallback();\n      }\n    }\n    return FormMixinImpl;\n  };\n  \n  export default FormMixin;"]}